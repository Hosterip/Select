{"mappings":"AAGA,MAAMA,EAAS,ICuBR,MACLC,YAAYC,EAAUC,EAAU,CAAC,GAC/BC,KAAKC,IAAMC,SAASC,cAAcL,GAClCE,KAAKD,QAAUA,EACfC,KAAKI,WAAaL,EAAQK,WAE1BJ,MAAKK,IACLL,MAAKM,GACP,CAEAD,KACE,MAAME,YAACA,EAAWC,KAAEA,GAAQR,KAAKD,QACjCC,KAAKC,IAAIQ,UAAUC,IAAI,UACvBV,KAAKC,IAAIU,UAvCO,EAACH,EAAO,GAAGD,EAAaH,KAC1C,IAAIQ,EAAOL,GAAe,iBAC1B,MAAMM,EAAQL,EAAKM,KAAIC,IACrB,IAAIC,EAAM,GAKV,OAJGD,EAAKE,KAAOb,IACbQ,EAAOG,EAAKG,MACZF,EAAM,YAED,mCACqBA,gCAAkCD,EAAKE,OAAOF,EAAKG,kBAC9E,IAEH,MAAO,2LAGmDN,oNAK3CC,EAAMM,KAAK,6CAGzB,EAgBsBC,CAAYZ,EAAKD,EAAaP,KAAKI,WAC1D,CAEAE,KACEN,KAAKqB,aAAerB,KAAKqB,aAAaC,KAAKtB,MAC3CA,KAAKC,IAAIsB,iBAAiB,QAASvB,KAAKqB,cACxCrB,KAAKwB,OAASxB,KAAKC,IAAIE,cAAc,uBACrCH,KAAKyB,OAASzB,KAAKC,IAAIE,cAAc,sBACvC,CAEAkB,aAAaK,GACX,MAAMC,KAACA,GAAQD,EAAME,OAAOC,QAC5B,GAAa,UAATF,EACF3B,KAAK8B,cACA,GAAa,SAATH,EAAiB,CAC1B,MAAMV,EAAKS,EAAME,OAAOC,QAAQZ,GAChCjB,KAAK+B,OAAOd,EACd,KAAoB,aAATU,GACT3B,KAAKgC,OAET,CAEIC,aACF,OAAOjC,KAAKC,IAAIQ,UAAUyB,SAAS,OACrC,CAEIC,cACF,OAAOnC,KAAKD,QAAQS,KAAK4B,MAAKrB,GAAQA,EAAKE,KAAOjB,KAAKI,YACzD,CAEA2B,OAAOd,GACLjB,KAAKI,WAAaa,EAClBjB,KAAKyB,OAAOY,YAAcrC,KAAKmC,QAAQjB,MAEvClB,KAAKC,IAAIqC,iBAAiB,sBAAsBC,SAAQC,IACtDA,EAAG/B,UAAUgC,OAAO,eAGtBzC,KAAKC,IAAIE,cAAc,aAAac,OAAQR,UAAUC,IAAI,YAE1DV,KAAKD,QAAQ2C,UAAW1C,KAAKD,QAAQ2C,SAAS1C,KAAKmC,SAEnDnC,KAAKgC,OACP,CAEAF,SACE9B,KAAKiC,OAASjC,KAAKgC,QAAUhC,KAAK2C,MACpC,CAEAA,OACE3C,KAAKC,IAAIQ,UAAUC,IAAI,QACvBV,KAAKwB,OAAOf,UAAUgC,OAAO,mBAC7BzC,KAAKwB,OAAOf,UAAUC,IAAI,gBAC5B,CAEAsB,QACEhC,KAAKC,IAAIQ,UAAUgC,OAAO,QAC1BzC,KAAKwB,OAAOf,UAAUgC,OAAO,iBAC7BzC,KAAKwB,OAAOf,UAAUC,IAAI,kBAC5B,CAEAkC,UACE5C,KAAKC,IAAI4C,oBAAoB,QAAS7C,KAAKqB,aAC7C,GDnGwB,UAAW,CACnCd,YAAa,wBACbH,WAAY,IACZI,KAAM,CACJ,CAACS,GAAI,IAAKC,MAAO,SACjB,CAACD,GAAI,IAAKC,MAAO,gBACjB,CAACD,GAAI,IAAKC,MAAO,OACjB,CAACD,GAAI,IAAKC,MAAO,SACjB,CAACD,GAAI,IAAKC,MAAO,WACjB,CAACD,GAAI,IAAKC,MAAO,QACjB,CAACD,GAAI,IAAKC,MAAO,QACjB,CAACD,GAAI,IAAKC,MAAO,SAEnBwB,SAAS3B,GACP+B,QAAQC,IAAI,gBAAiBhC,EAC/B,IAEFiC,OAAOC,EAAIrD","sources":["src/index.js","src/select/select.js"],"sourcesContent":["import {Select} from \"./select/select\"\nimport \"./select/style.scss\"\n\nconst select = new Select(\"#select\", {\n  placeholder: \"Choose element please\",\n  selectedId: \"4\",\n  data: [\n    {id: \"1\", value: \"React\"},\n    {id: \"2\", value: \"React Native\"},\n    {id: \"3\", value: \"Vue\"},\n    {id: \"4\", value: \"Redux\"},\n    {id: \"5\", value: \"Angular\"},\n    {id: \"6\", value: \"Next\"},\n    {id: \"7\", value: \"Nest\"},\n    {id: \"8\", value: \"Vite\"},\n  ],\n  onSelect(item) {\n    console.log(\"Selected item\", item)\n  }\n})\nwindow.s = select","const getTemplate = (data = [],placeholder, selectedId) => {\n  let text = placeholder ?? \"Choose element\"\n  const items = data.map(item => {\n    let cls = \"\"\n    if(item.id === selectedId) {\n      text = item.value\n      cls = \"selected\"\n    }\n    return `\n      <li class=\"select__item ${cls}\" data-type=\"item\" data-id=\"${item.id}\">${item.value}</li>\n    `\n  })\n  return `\n         <div class=\"select__backdrop\" data-type=\"backdrop\"></div>\n         <div class=\"select__input\" data-type=\"input\">\n             <span id=\"select__current\" data-type=\"value\">${text}</span>\n             <i class=\"fa-solid fa-chevron-down select__arrow\" data-type=\"arrow\"></i>\n         </div>\n         <div class=\"select__dropdown\">\n            <ul class=\"select__list\">\n               ${items.join(\"\")}\n            </ul>\n         </div>\n  `\n}\n\nexport class Select {\n  constructor(selector, options = {}) {\n    this.$el = document.querySelector(selector)\n    this.options = options\n    this.selectedId = options.selectedId\n\n    this.#render()\n    this.#setup()\n  }\n\n  #render(){\n    const {placeholder, data} = this.options\n    this.$el.classList.add(\"select\")\n    this.$el.innerHTML = getTemplate(data,placeholder, this.selectedId)\n  }\n\n  #setup(){\n    this.clickHandler = this.clickHandler.bind(this)\n    this.$el.addEventListener(\"click\", this.clickHandler)\n    this.$arrow = this.$el.querySelector('[data-type=\"arrow\"]')\n    this.$value = this.$el.querySelector('[data-type=\"value\"]')\n  }\n\n  clickHandler(event){\n    const {type} = event.target.dataset\n    if (type === \"input\") {\n      this.toggle()\n    } else if (type === \"item\") {\n      const id = event.target.dataset.id\n      this.select(id)\n    } else if (type === \"backdrop\") {\n      this.close()\n    }\n  }\n\n  get isOpen() {\n    return this.$el.classList.contains(\"open\")\n  }\n\n  get current() {\n    return this.options.data.find(item => item.id === this.selectedId)\n  }\n\n  select(id) {\n    this.selectedId = id\n    this.$value.textContent = this.current.value\n\n    this.$el.querySelectorAll(`[data-type=\"item\"]`).forEach(el => {\n      el.classList.remove(\"selected\")\n    })\n\n    this.$el.querySelector(`[data-id=\"${id}\"]`).classList.add(\"selected\")\n\n    this.options.onSelect ? this.options.onSelect(this.current) : \"\"\n\n    this.close()\n  }\n\n  toggle(){\n    this.isOpen ? this.close() : this.open()\n  }\n\n  open() {\n    this.$el.classList.add('open')\n    this.$arrow.classList.remove('fa-chevron-down')\n    this.$arrow.classList.add('fa-chevron-up')\n  }\n\n  close() {\n    this.$el.classList.remove(\"open\")\n    this.$arrow.classList.remove('fa-chevron-up')\n    this.$arrow.classList.add('fa-chevron-down')\n  }\n\n  destroy(){\n    this.$el.removeEventListener(\"click\", this.clickHandler)\n  }\n}"],"names":["$35da740d59af89ba$var$select","constructor","selector","options","this","$el","document","querySelector","selectedId","render","setup","placeholder","data","classList","add","innerHTML","text","items","map","item","cls","id","value","join","$7f11ace4236306ad$var$getTemplate","clickHandler","bind","addEventListener","$arrow","$value","event","type","target","dataset","toggle","select","close","isOpen","contains","current","find","textContent","querySelectorAll","forEach","el","remove","onSelect","open","destroy","removeEventListener","console","log","window","s"],"version":3,"file":"index.9edcfcc2.js.map"}